openapi: 3.0.0
info:
  title: api
  version: '1.0'
  description: 'Click [here](../docs/anchors.md#header1) or [here](../docs/anchors.md#header3)'
servers:
  - url: 'http://localhost:3000'
paths:
  /api:
    get:
      summary: api
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  raz:
                    type: string
                  dwa:
                    type: string
                  trzy:
                    type: string
              examples:
                example-1:
                  value:
                    raz: string
                    dwa: string
                    trzy: string
                example-2:
                  value:
                    raz: raz
                    dwa: dwa
                    trzy: trzy
      operationId: get-api
      parameters:
        - schema:
            type: string
            default: aaa
            enum:
              - api
          in: query
          deprecated: true
          name: a
          explode: true
          allowEmptyValue: true
          allowReserved: true
        - schema:
            type: string
          in: query
          name: b
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                '':
                  type: string
  /logout:
    get:
      summary: logout
      tags: []
      responses: {}
      operationId: get-login
      parameters:
        - schema:
            type: string
            default: application/json
            example: application/json
          in: header
          name: Content-Type
        - schema:
            type: string
            default: Kle
            example: qqq
          in: header
          name: loginId
        - schema:
            type: string
            default: org
            example: ex
          in: header
          name: orgId
        - schema:
            type: string
            default: tar
            example: ttt
          in: header
          name: target
        - schema:
            type: string
            default: tok
            example: las
          in: header
          name: token
    parameters: []
  /refresh:
    get:
      summary: refresh
      tags: []
      responses: {}
      operationId: get-refresh
      parameters:
        - schema:
            type: string
            default: aa
            example: z
          in: header
          name: Content-Type
        - schema:
            type: string
            default: zz
            example: d
          in: header
          name: loginId
        - schema:
            type: string
            default: ss
            example: qq
          in: header
          name: orgId
        - schema:
            type: string
            default: qq
            example: ee
          in: header
          name: refreshKey
        - schema:
            type: string
            default: asd
            example: dasda
          in: header
          name: token
  /login:
    get:
      summary: login
      tags: []
      responses: {}
      operationId: get-login
      parameters:
        - schema:
            type: string
            default: dsada
            example: weqq
          in: header
          name: Content-Type
        - schema:
            type: string
            default: loginId
            example: loginId
          in: header
          name: loginId
        - schema:
            type: string
            default: orgId
            example: orgId
          in: header
          name: orgId
        - schema:
            type: string
            default: password
            example: password
          in: header
          name: password
        - schema:
            type: string
            default: target
          in: header
          name: target
        - schema:
            type: string
            default: locale
            example: locale
          in: header
          name: locale
  /mech:
    get:
      summary: mech
      tags: []
      responses: {}
      operationId: get-mech
    post:
      summary: ''
      operationId: post-mech
      responses:
        '200':
          description: OK
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
components:
  schemas:
    Kle:
      title: Kle
      anyOf:
        - allOf:
            - type: object
              properties:
                id:
                  type: string
tags: []
